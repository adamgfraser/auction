package golem:component

interface api {
  record bidder-id {
    bidder-id: string,
  }

  record item-id {
    item-id: string,
  }

  type deadline = u64

  record item {
    item-id: string,
    name: string,
    description: string,
    limit-price: float32,
    expiration: deadline,
  }

  variant bid-result {
    success,
    failure(string),
  }

  register-bidder: func(name: string, address: string) -> bidder-id

  list-item: func(name: string, description: string, limit-price: float32, expiration: deadline) -> item-id

  get-available-items: func() -> list<item>

  bid: func(bidder-id: bidder-id, item-id: item-id, price: float32) -> bid-result

  close-auction: func(item-id: string) -> option<bidder-id>
}

world auction {
  export api
}